# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: ${{ matrix.os }} / OpenJDK ${{ matrix.jdk }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        jdk: ['17', '19']
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK ${{ matrix.jdk }}
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: ${{ matrix.jdk }}
        cache: gradle
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
#    - name: SonarQube
#      if:  ${{ matrix.jdk == '17' }}
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
#      run: ./gradlew sonarqube -PsonarToken=${{ secrets.SONAR_TOKEN }}
  deploy:
    if: ${{ github.event_name != 'pull_request' }}
    needs: [ build ]
    runs-on: ubuntu-latest
    name: Deploy
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: '17'
    - name: Deploy
      env:
        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_SIGNING_KEY }}
        ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_PASSPHRASE }}
        ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.OSSRH_USERNAME }}
        ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.OSSRH_PASSWORD }}
      run: ./gradlew publish --no-daemon
